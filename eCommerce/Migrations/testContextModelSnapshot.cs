// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.DataLayer;

namespace eCommerce.Migrations
{
    [DbContext(typeof(testContext))]
    partial class testContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eCommerce.DataLayer.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ClassroomId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("eCommerce.DataLayer.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MyPair<Classroom, Course>ClassroomId")
                        .HasColumnType("int");

                    b.Property<int?>("MyPair<Classroom, Course>StudentId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("MyPair<Classroom, Course>StudentId", "MyPair<Classroom, Course>ClassroomId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("eCommerce.DataLayer.MyPair<eCommerce.DataLayer.Classroom, eCommerce.DataLayer.Course>", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "ClassroomId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Pairs");
                });

            modelBuilder.Entity("eCommerce.DataLayer.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("eCommerce.DataLayer.Course", b =>
                {
                    b.HasOne("eCommerce.DataLayer.MyPair<eCommerce.DataLayer.Classroom, eCommerce.DataLayer.Course>", null)
                        .WithMany("Courses")
                        .HasForeignKey("MyPair<Classroom, Course>StudentId", "MyPair<Classroom, Course>ClassroomId");
                });

            modelBuilder.Entity("eCommerce.DataLayer.MyPair<eCommerce.DataLayer.Classroom, eCommerce.DataLayer.Course>", b =>
                {
                    b.HasOne("eCommerce.DataLayer.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.DataLayer.Student", null)
                        .WithMany("dict")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("eCommerce.DataLayer.MyPair<eCommerce.DataLayer.Classroom, eCommerce.DataLayer.Course>", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("eCommerce.DataLayer.Student", b =>
                {
                    b.Navigation("dict");
                });
#pragma warning restore 612, 618
        }
    }
}
